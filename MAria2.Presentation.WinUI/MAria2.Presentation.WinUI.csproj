<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.22621.0</TargetPlatformMinVersion>
    <RootNamespace>MAria2.Presentation.WinUI</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x64</Platforms>
    <RuntimeIdentifiers>win-x64;linux-x64;osx-x64</RuntimeIdentifiers>
    <PublishProfile>win-x64-framework-dependent</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    
    <!-- Cross-Platform Compatibility -->
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <EnableWindowsTargeting Condition="'$(OS)' == 'Windows_NT'">true</EnableWindowsTargeting>
    <DisableWinUIProjectSystemRegistration Condition="'$(OS)' != 'Windows_NT'">true</DisableWinUIProjectSystemRegistration>
    
    <!-- Fallback UI Strategy -->
    <DefineConstants Condition="'$(OS)' != 'Windows_NT'">$(DefineConstants);CROSSPLATFORM</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup>
    <!-- Windows-Specific References -->
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.4.231008000" Condition="'$(OS)' == 'Windows_NT'" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.755" Condition="'$(OS)' == 'Windows_NT'" />
    
    <!-- Conditional Notification Support -->
    <PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.1.3" Condition="'$(OS)' == 'Windows_NT'" />
    
    <!-- Cross-Platform Core References -->
    <PackageReference Include="System.Text.Json" Version="8.0.0" />
    <PackageReference Include="Avalonia" Version="11.0.5" Condition="'$(OS)' != 'Windows_NT'" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.5" Condition="'$(OS)' != 'Windows_NT'" />
    <PackageReference Include="System.Net.NetworkInformation" Version="8.0.0" />
    <PackageReference Include="System.Security.Cryptography.Algorithms" Version="4.3.1" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    
    <!-- Dependency Injection and Configuration -->
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="8.0.0" />
    
    <!-- Logging -->
    <PackageReference Include="Serilog" Version="3.1.1" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="5.0.1" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\MAria2.Core\MAria2.Core.csproj" />
    <ProjectReference Include="..\MAria2.Infrastructure\MAria2.Infrastructure.csproj" />
    <ProjectReference Include="..\MAria2.Application\MAria2.Application.csproj" />
  </ItemGroup>

  <!-- Conditional Compilation for Non-Windows Platforms -->
  <Choose>
    <When Condition="'$(OS)' != 'Windows_NT'">
      <ItemGroup>
        <Compile Remove="**\*.Windows.cs" />
        <None Include="**\*.Windows.cs" />
        
        <!-- Add Cross-Platform UI Files -->
        <Compile Include="CrossPlatform\**\*.cs" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Compile Remove="CrossPlatform\**\*.cs" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <!-- Fallback UI Configuration -->
  <ItemGroup Condition="'$(OS)' != 'Windows_NT'">
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.*.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>